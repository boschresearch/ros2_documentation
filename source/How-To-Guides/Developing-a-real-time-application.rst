Developing a real-time application
##########################

.. contents:: Table of Contents
   :depth: 2
   :local:

This How-To-Guide gives an overview how to develop a real-time applications. Several steps are necessary.

Real-Time Linux
---------------
`Real-Time Linux <https://wiki.linuxfoundation.org/realtime/start>`_, aka (using the PREEMPT_RT kernel patch) has been in the making for long time and has been `merged in mainline Linux 5.15 <https://lwn.net/Articles/867919/>`_. This patch reduces the context switch costs in the Linux scheduler. They are being analyzed for various architectures by the `OSADL organization <https://www.osadl.org/OSADL-QA-Farm-Real-time.linux-real-time.0.html>`_. 


- [Link to tutorial, how to install real-time Linux](https://docs.ros.org/en/rolling/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.html)
- [Link to tutorial, how to build real-time Linux for Raspberry Pi4](https://github.com/ros-realtime/linux-real-time-kernel-builder)
- [Link to image for Raspberry Pi4 with real-time Linux](hhttps://github.com/ros-realtime/ros-realtime-rpi4-image)
- [Further documenation for ROS 2 on QNX and VxWorks](https://ros-realtime.github.io/Guides/Real-Time-Operating-System-Setup/rtos_setup.html)


Latency histograms of the scheduler of real-time Linux can be generated by the tool [cyclictest by OSADL](https://www.osadl.org/Create-a-latency-plot-from-cyclictest-hi.bash-script-for-latency-plot.0.html).


test 1 `cross_compile package <https://github.com/ros-tooling/cross_compile>`__.
test 1b `cross_compile package <https://github.com/ros-tooling/cross_compile>`_.
test 2 `cross_compile package <https://wiki.linuxfoundation.org/realtime/start>`_.
test 3 `cross_compile package <https://wiki.linuxfoundation.org/realtime/start>`.
test 4 `Real-Time Linux <https://wiki.linuxfoundation.org/realtime/start>`.
test 5 `Real-Time Linux <https://wiki.linuxfoundation.org/realtime/start>`_

ROS 2 Executors
------------------

- link to executor concepts web page

Multi-threaded executor
------------------------

- example in ros2 executor workshop

callback group level executor
------------------------

- link to cbg code example 

ROS 2 tracing
-------------
- link to ros2 tracing site

Assigment of real-time priorities
---------------------------------
- link to executor workshop

In-the-making
---------------------------------
- Events Executor (PR)

Other advanced concepts
---------------------------------
- rclc-Executor (trigger condition)
- uni xxx